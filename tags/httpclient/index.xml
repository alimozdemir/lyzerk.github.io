<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>httpclient on Alim Özdemir</title>
    <link>/tags/httpclient/</link>
    <description>Recent content in httpclient on Alim Özdemir</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 06 Mar 2021 10:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/httpclient/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ASP.NET Core: Concatenating JSON endpoints</title>
      <link>/posts/aspnet-core-concatenating-json-endpoints/</link>
      <pubDate>Sat, 06 Mar 2021 10:00:00 +0000</pubDate>
      
      <guid>/posts/aspnet-core-concatenating-json-endpoints/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;TLDR; We have redirected an http client response into ASP.NET Core response with the desired structure.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Most commonly faced scenario about API design is you want to serialize a POCO class or a different type of objects to JSON with direct serializer. Then get the serialized value and use it. If you are handling big objects/data/files, then you have to be careful with what you do. Otherwise, it can have devastating impacts on the performance.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>