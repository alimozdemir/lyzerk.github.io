<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>package on Alim Özdemir</title>
    <link>/categories/package/</link>
    <description>Recent content in package on Alim Özdemir</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 26 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/package/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[NUGET] PromptCLI</title>
      <link>/projects/nuget-promptcli/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/projects/nuget-promptcli/</guid>
      <description></description>
    </item>
    
    <item>
      <title>[NPM] fabric-history</title>
      <link>/projects/npm-fabric-history/</link>
      <pubDate>Sun, 11 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/projects/npm-fabric-history/</guid>
      <description></description>
    </item>
    
    <item>
      <title>GrandNode Payment Iyzico</title>
      <link>/projects/grandnode-payment-iyzico/</link>
      <pubDate>Wed, 20 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/projects/grandnode-payment-iyzico/</guid>
      <description>You can found details at https://github.com/lyzerk/Grand.Plugin.Payments.Iyzico</description>
    </item>
    
    <item>
      <title>Triggr: Lightweight source code monitoring</title>
      <link>/projects/triggr-lightweight-source-code-monitoring/</link>
      <pubDate>Sat, 01 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/projects/triggr-lightweight-source-code-monitoring/</guid>
      <description>Existing tools for monitoring the quality of codebases modified by multiple developers tend to be centralized and inflexible. These tools increase the visibility of quality by producing effective reports and visualizations when a change is made to the codebase and triggering alerts when undesirable situations occur. However, their configuration is invariably both (a) centrally managed in that individual maintainers cannot define local rules to receive customized feedback when a change occurs in a specific part of the code in which they are particularly interested, and (b) coarse-grained in that analyses cannot be turned on and off below the file level.</description>
    </item>
    
    <item>
      <title>[NUGET] DDown</title>
      <link>/projects/nuget-ddown/</link>
      <pubDate>Sat, 13 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/projects/nuget-ddown/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>